---
// Import obsolète supprimé - effets uniformes maintenant

interface Props {
  variant?: "primary" | "secondary" | "outline";
  href?: string;
  target?: string;
  rel?: string;
}

const { variant = "primary", href, target, rel } = Astro.props;

const buttonClass = `btn btn--${variant} surface`;
// Système de rotation obsolète supprimé
---

{
  href ? (
    <a href={href} target={target} rel={rel} class={buttonClass}>
      <slot />
    </a>
  ) : (
    <button class={buttonClass}>
      <slot />
    </button>
  )
}

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-sm) var(--space-lg);
    border-radius: var(--border-radius);
    font-family: var(--font-family-sans);
    font-weight: var(--font-weight-semibold);
    font-size: var(--font-size-base);
    text-decoration: none;
    cursor: pointer;
    color: var(--color-on-background);
    min-height: 44px;
    min-width: 120px;
  }

  .btn:focus-visible {
    outline: var(--focus-ring);
    outline-offset: var(--focus-offset);
    border-radius: var(--border-radius);
  }

  .btn--primary {
    background: var(--color-primary);
    border: 1px solid var(--color-primary);
    color: var(--color-on-background);
    box-shadow: 0 4px 15px oklch(from var(--color-primary) l c h / 0.3);
    position: relative;
    overflow: hidden;
  }

  .btn--primary:hover {
    background: var(--color-primary-variant);
    border-color: var(--color-primary-variant);
    color: var(--color-on-background);
    transform: translate3d(0, -3px, 0) scale(1.05);
    box-shadow: 0 12px 30px oklch(from var(--color-primary) l c h / 0.4);
  }

  .btn--primary:focus-visible {
    background: var(--color-primary);
    border-color: var(--color-primary);
  }

  .btn--secondary {
    border: var(--glass-border-hover);
    color: var(--color-primary);
  }

  .btn--secondary:hover {
    background: var(--color-primary);
    color: var(--color-on-background);
    transform: translate3d(0, -3px, 0) scale(1.05);
    box-shadow: 0 8px 25px oklch(from var(--color-primary) l c h / 0.3);
  }

  .btn--secondary:focus-visible {
    background: var(--color-primary);
    color: var(--color-on-background);
  }

  .btn--outline {
    color: var(--color-on-surface);
  }

  .btn--outline:hover {
    border-color: var(--color-primary);
    color: var(--color-primary);
    transform: translate3d(0, -3px, 0) scale(1.05);
    box-shadow: 0 8px 25px oklch(from var(--color-primary) l c h / 0.2);
  }

  .btn--outline:focus-visible {
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  /* Responsive Boutons - Solution ultime */
  @media (max-width: 360px) {
    .btn {
      padding: var(--space-sm);
      font-size: var(--font-size-caption);
      min-width: auto;
    }
  }

  /* Effet de glow subtil pour les boutons par défaut */
  .btn:not(.btn--primary):not(.btn--secondary):not(.btn--outline):hover {
    box-shadow: 0 8px 25px oklch(from var(--color-border) l c h / 0.2);
  }
</style>
